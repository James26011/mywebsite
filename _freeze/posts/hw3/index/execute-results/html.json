{
  "hash": "328e45c0bd9cc284919fde20b80a0fa3",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: LS 빅데이터 스쿨 Homework 3\nauthor: 이태현\ndate: '2024-07-25'\ncategoty:\n  - bigdata\n---\n\n# 2024-07-25(목)\n\n::: {#0baf1cee .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import binom\nfrom scipy.stats import norm\nimport math\nimport numpy as np\n```\n:::\n\n\n#### Q.1 정규분포 pdf 값을 계산하는 자신만의 파이썬 함수를 정의하고, 정규분포 mu = 3, sigma = 2의 pdf를 그릴 것\n`import norm 사용 금지`\n\n::: {#480f88d3 .cell execution_count=2}\n``` {.python .cell-code}\ndef pdf(x, mu, sigma):\n    a = 1 / sigma*np.sqrt(2*math.pi)\n    b = (x - mu) / sigma\n    return a * np.exp(-0.5*b**2)\n```\n:::\n\n\n::: {#90b8f5c9 .cell execution_count=3}\n``` {.python .cell-code}\nz = np.linspace(-8,14,1000)\ny = pdf(z,3,2)\n\nplt.plot(z,y,color='black')\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-1.png){width=577 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n#### Q.2 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오.\nX ~ N(2,3^2)\n\n::: {#d0d1f674 .cell execution_count=4}\n``` {.python .cell-code}\n# 1번 P(X < 3)\nnorm.cdf(3,2,3)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n0.6305586598182363\n```\n:::\n:::\n\n\n::: {#b6c8f715 .cell execution_count=5}\n``` {.python .cell-code}\n# 2번 P(2 < X < 5)\nnorm.cdf(5,2,3) - norm.cdf(2,2,3)\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n0.3413447460685429\n```\n:::\n:::\n\n\n::: {#fdbe520b .cell execution_count=6}\n``` {.python .cell-code}\n# 3번 P(X < 3 or X > 7)\nnorm.cdf(3,2,3) + (1 - (norm.cdf(7,2,3)))\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\n0.678349012091051\n```\n:::\n:::\n\n\n#### Q.3 LS 빅데이터 스쿨 학생들의 중간고사 점수는 평균이 30이고, 분산이 4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는? \n\n::: {#006027df .cell execution_count=7}\n``` {.python .cell-code}\nnorm.ppf(0.95, 30, 2)\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n33.28970725390295\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}