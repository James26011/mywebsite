{
  "hash": "a78573e131fd1a58b8ab9d494ebcd6e1",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: LS 빅데이터 스쿨 Homework 4\nauthor: 이태현\ndate: '2024-07-29'\ncategoty:\n  - bigdata\n---\n\n# 2024-07-29(월)\n\n::: {#46e56a7a .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import uniform\nfrom scipy.stats import norm\nimport math\nimport numpy as np\n```\n:::\n\n\n# 표본 분산 계산 시 왜 n-1로 나누는지 알아보도록 하겠습니다. 균일분포 (3, 7)에서 20개의 표본을 뽑아서 분산을 2가지 방법으로 추정해보세요.\n\n#### n-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고, s_2의 분포와 k_2의 분포를 그려주세요! (10000개 사용)\n\n::: {#ed396ab1 .cell execution_count=2}\n``` {.python .cell-code}\nx = uniform.rvs(loc=3, scale=4, size=20*10000).reshape(-1,20)\nx\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\narray([[6.8804115 , 3.81170738, 3.7651943 , ..., 6.43746048, 5.02165541,\n        4.27117068],\n       [3.74500618, 6.74858537, 3.56383383, ..., 5.07993933, 5.80474114,\n        5.9834357 ],\n       [4.89314608, 6.35709756, 3.88333317, ..., 4.66020105, 5.75132888,\n        5.99595639],\n       ...,\n       [5.90537449, 3.49701355, 4.48943218, ..., 5.06576509, 3.46467197,\n        6.18483596],\n       [6.73541232, 6.9930657 , 4.94925848, ..., 3.25980617, 5.54112862,\n        5.32278337],\n       [4.91479523, 4.87649606, 3.87299707, ..., 5.62237697, 6.24859571,\n        6.02170664]])\n```\n:::\n:::\n\n\n::: {#ac9d5ecc .cell execution_count=3}\n``` {.python .cell-code}\n# n-1로 나누기\ns_2 = x.var(axis=1, ddof=1)\ns_2\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\narray([1.30644868, 1.7744977 , 0.95885709, ..., 1.59010413, 0.95292142,\n       1.21680893])\n```\n:::\n:::\n\n\n::: {#7ae00812 .cell execution_count=4}\n``` {.python .cell-code}\n# s_2의 분포\nplt.hist(s_2,color='orange')\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){width=583 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n::: {#65de19f3 .cell execution_count=5}\n``` {.python .cell-code}\n# n으로 나누기\nk_2 = x.var(axis=1,ddof=0)\nk_2\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\narray([1.24112624, 1.68577282, 0.91091423, ..., 1.51059893, 0.90527535,\n       1.15596848])\n```\n:::\n:::\n\n\n::: {#c7839ca9 .cell execution_count=6}\n``` {.python .cell-code}\n# k_2의 분포\nplt.hist(k_2,color='green')\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){width=583 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n#### 각 분포 그래프에 모분산의 위치에 녹색 막대를 그려주세요.\n\n::: {#0be5d2b0 .cell execution_count=7}\n``` {.python .cell-code}\nplt.hist(s_2,color='red')\nplt.axvline(x = x.var(),color='white',linestyle='--',linewidth=1)\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-8-output-1.png){width=583 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n::: {#57f38d1f .cell execution_count=8}\n``` {.python .cell-code}\nplt.hist(k_2,color='green')\nplt.axvline(x = x.var(),color='black',linestyle='--',linewidth=1)\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-9-output-1.png){width=583 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n#### 결과를 살펴보고, 왜 n-1로 나눈 것을 분산을 추정하는 지표로 사용하는 것이 타당한지 써주세요!\n\ns_2의 분포는 모분산에 근접합니다. 하지만 k_2의 분포는 모분산보다 낮게 추정됩니다.\n\n즉 s_2의 경우 표본 분산이 모분산에 대해 편향 없는 추정량이라는 의미입니다. k_2는 표본의 분산을 보정없이 계산하므로, 모분산을 과소 추정하는 경향이 있습니다.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}