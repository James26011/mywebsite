{
  "hash": "5760d23711e2282a5b5e14eb35107aa0",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"LS 빅데이터 스쿨 Homework 7\"\nauthor: \"이태현\"\ndate: \"2024-09-02\"\ncategoty: ['bigdata']\njupyter: python3\n---\n\n# ADP 표본점수\n2022년에 실시 된 ADP 실기 시험의 통계파트 표준점수는 평균이 30, 표준편차가 5인 정규분포를따른다고 한다.\n\n## 1. ADP 실기 시험의 통계파트 표준점수의 밀도함수를 그려보세요.\n\n::: {#7d482dcf .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nfrom scipy.stats import norm\nimport matplotlib.pyplot as plt\n\nx = np.arange(10,50,0.1)\ny = norm.pdf(x,loc = 30, scale = 5)\nplt.plot(x,y)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=579 height=411}\n:::\n:::\n\n\n## 2. ADP 수험생을 임의로 1명을 선택하여 통계 점수를 조회했을때 45점 보다 높은 점수를 받았을 확률을 구하세요.\n\n::: {#72c75fd4 .cell execution_count=2}\n``` {.python .cell-code}\n1 - norm.cdf(45, loc = 30, scale = 5)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n0.0013498980316301035\n```\n:::\n:::\n\n\n## 3. 슬통이는 상위 10%에 해당하는 점수를 얻었다고 한다면, 슬통이의 점수는 얼마인지 계산해보세요.\n\n::: {#39395885 .cell execution_count=3}\n``` {.python .cell-code}\nnorm.ppf(0.9, loc = 30, scale = 5)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n36.407757827723\n```\n:::\n:::\n\n\n## 4. 슬기로운 통계생활의 해당 회차 수강생은 16명이었다고 한다. 16명의 통계 파트 점수를 평균내었을 때, 이 평균값이 따르는 분포의 확률밀도 함수를 1번의 그래프와 겹쳐 그려보세요.\n\n::: {#0c4166c6 .cell execution_count=4}\n``` {.python .cell-code}\nx = np.arange(10,50,0.1)\ny = norm.pdf(x,loc = 30, scale = 5)\nplt.plot(x,y)\n\nk = norm.pdf(x, loc = 30, scale = 5/np.sqrt(16))\nplt.plot(x,k,color = 'blue')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){width=579 height=411}\n:::\n:::\n\n\n## 5. 슬기로운 통계생활 ADP 반 수강생들의 통계점수를 평균내었다고 할 때, 이 값이 38점보다 높게 나올 확률을 구하세요.\n\n::: {#2fc82cec .cell execution_count=5}\n``` {.python .cell-code}\n1 - norm.cdf(38,loc = 30, scale = 5/np.sqrt(16))\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n7.76885222819601e-11\n```\n:::\n:::\n\n\n# 카이제곱분포와 표본분산\n자유도가 𝑘인 카이제곱분포를 따르는 확률변수 𝑋 를\n𝑋 ∼ 𝜒2(𝑘) 과 같이 나타내고, 이 확률변수의 확률밀도함수는 다음과 같습니다.\n𝑓𝑋(𝑥; 𝑘) = 1 / 2𝑘/2Γ(𝑘/2) * (𝑥𝑘/2−1 * 𝑒−𝑥/2)\n다음의 물음에 답하세요.\n\n## 1. 자유도가 4인 카이제곱분포의 확률밀도함수를 그려보세요.\n\n::: {#248cd438 .cell execution_count=6}\n``` {.python .cell-code}\nfrom scipy.stats import chi2, norm\n\nx = np.linspace(0,30,1000)\ny = chi2.pdf(x, 4)\n\nplt.plot(x,y)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){width=587 height=411}\n:::\n:::\n\n\n## 2. 다음의 확률을 구해보세요.\n𝑃 (3 ≤ 𝑋 ≤ 5)\n\n::: {#00ac71c7 .cell execution_count=7}\n``` {.python .cell-code}\nchi2.cdf(5,4) - chi2.cdf(3,4)\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n0.27052790518742903\n```\n:::\n:::\n\n\n## 3. 자유도가 4인 카이제곱분포에서 크기가 1000인 표본을 뽑은 후, 히스토그램을 그려보세요.\n\n::: {#ae8f04b2 .cell execution_count=8}\n``` {.python .cell-code}\nk = chi2.rvs(4, size = 1000)\n\nplt.hist(k,bins=50, density=True)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\n(array([0.07616917, 0.12694862, 0.18234439, 0.18465254, 0.20773411,\n        0.1708036 , 0.16618729, 0.1708036 , 0.13387309, 0.13156494,\n        0.1015589 , 0.0854018 , 0.09925074, 0.07155286, 0.05770392,\n        0.05077945, 0.04847129, 0.0323142 , 0.03000604, 0.03000604,\n        0.01154078, 0.0323142 , 0.00692447, 0.01846525, 0.01384894,\n        0.00923263, 0.00692447, 0.00923263, 0.01384894, 0.00692447,\n        0.00230816, 0.00230816, 0.00461631, 0.00230816, 0.        ,\n        0.        , 0.        , 0.        , 0.        , 0.00230816,\n        0.        , 0.        , 0.        , 0.        , 0.00230816,\n        0.        , 0.        , 0.00230816, 0.        , 0.00230816]),\n array([ 0.09064352,  0.52388965,  0.95713578,  1.39038191,  1.82362804,\n         2.25687416,  2.69012029,  3.12336642,  3.55661255,  3.98985868,\n         4.42310481,  4.85635094,  5.28959707,  5.7228432 ,  6.15608933,\n         6.58933546,  7.02258159,  7.45582772,  7.88907385,  8.32231998,\n         8.75556611,  9.18881223,  9.62205836, 10.05530449, 10.48855062,\n        10.92179675, 11.35504288, 11.78828901, 12.22153514, 12.65478127,\n        13.0880274 , 13.52127353, 13.95451966, 14.38776579, 14.82101192,\n        15.25425805, 15.68750417, 16.1207503 , 16.55399643, 16.98724256,\n        17.42048869, 17.85373482, 18.28698095, 18.72022708, 19.15347321,\n        19.58671934, 20.01996547, 20.4532116 , 20.88645773, 21.31970386,\n        21.75294999]),\n <BarContainer object of 50 artists>)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-9-output-2.png){width=587 height=411}\n:::\n:::\n\n\n## 4. 자유도가 4인 카이제곱분포를 따르는 확률변수에서 나올 수 있는 값 중 상위 5%에 해당하는 값은 얼마인지 계산해보세요.\n\n::: {#80c949b5 .cell execution_count=9}\n``` {.python .cell-code}\nchi2.ppf(0.95,4)\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\n9.487729036781154\n```\n:::\n:::\n\n\n## 5. 3번에서 뽑힌 표본값들 중 상위 5%에 위치한 표본의 값은 얼마인가요?\n\n::: {#cadd2de6 .cell execution_count=10}\n``` {.python .cell-code}\nnp.percentile(k, 95)\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n9.43839986661145\n```\n:::\n:::\n\n\n## 6. 평균이 3, 표준편차가 2인 정규분포를 따르는 확률변수에서 크기가 20인 표본, 𝑥1, ..., 𝑥20,을 뽑은 후 표본분산을 계산한 것을 𝑠21이라 생각해보죠. 다음을 수행해보세요!\n• 같은 방법으로 500개의 𝑠2 들, 𝑠21, 𝑠22, ..., 𝑠2 500 발생시킵니다.\n\n• 발생한 500개의 𝑠2 들 각각에 4.75를 곱하고, 그것들의 히스토그램을 그려보세요. (히스토그램을 그릴 때 probability = TRUE 옵션을 사용해서 그릴 것)\n\n• 위에서 그린 히스토그램에 자유도가 19인 카이제곱분포 확률밀도함수를 겹쳐그려보세요.\n\n::: {#dbc3853a .cell execution_count=11}\n``` {.python .cell-code}\nn = 20\nnum = 500\nlist = []\n\nfor i in range(num):\n    x = norm.rvs(loc = 3, scale = 2, size = n)\n    list.append(np.var(x, ddof = 1))\nk = np.array(list) * 4.75\n\nplt.hist(k, bins=50, density=True)\nx = np.linspace(0, max(k), 1000)\npdf_chi19 = chi2.pdf(x, df=19)\nplt.plot(x, pdf_chi19, 'r--', linewidth=2);\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-12-output-1.png){width=579 height=411}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}