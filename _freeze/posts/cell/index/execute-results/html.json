{
  "hash": "d87d7a1620ecb32cfea515624bbfcf35",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"LS 빅데이터 스쿨 Cell\"\nauthor: \"이태현\"\ndate: \"2024-09-10\"\ncategoty: ['bigdata']\njupyter: python3\n---\n\n\n종속변수: 백혈병 세포 관측 불가 여부 (REMISS), 1이면 관측 안됨을 의미\n\n독립변수:\n\n골수의 세포성 (CELL)\n\n골수편의 백혈구 비율 (SMEAR)\n\n골수의 백혈병 세포 침투 비율 (INFIL)\n\n골수 백혈병 세포의 라벨링 인덱스 (LI)\n\n말초혈액의 백혈병 세포 수 (BLAST)\n\n치료 시작 전 최고 체온 (TEMP)\n\n\n# 문제 1. 데이터를 로드하고, 로지스틱 회귀모델을 적합하고, 회귀 표를 작성하세요.\n\n::: {#d6a2c0b1 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport statsmodels.api as sm\nfrom scipy.stats import norm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, accuracy_score, f1_score\n\ndf = pd.read_csv('../../data/leukemia_remission.txt', delimiter='\\t')\n\n# 독립변수와 종속변수 분리\nX = df[['CELL', 'SMEAR', 'INFIL', 'LI', 'BLAST', 'TEMP']]\ny = df['REMISS']\n\n# 상수항 추가\nX = sm.add_constant(X)\n\n# 로지스틱 회귀 모델 적합\nmodel = sm.Logit(y, X)\nresult = model.fit()\n\n# 회귀 결과 출력\nprint(result.summary())\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOptimization terminated successfully.\n         Current function value: 0.399886\n         Iterations 10\n                           Logit Regression Results                           \n==============================================================================\nDep. Variable:                 REMISS   No. Observations:                   27\nModel:                          Logit   Df Residuals:                       20\nMethod:                           MLE   Df Model:                            6\nDate:                Tue, 10 Sep 2024   Pseudo R-squ.:                  0.3718\nTime:                        10:23:15   Log-Likelihood:                -10.797\nconverged:                       True   LL-Null:                       -17.186\nCovariance Type:            nonrobust   LLR p-value:                   0.04670\n==============================================================================\n                 coef    std err          z      P>|z|      [0.025      0.975]\n------------------------------------------------------------------------------\nconst         64.2581     74.965      0.857      0.391     -82.670     211.187\nCELL          30.8301     52.135      0.591      0.554     -71.353     133.013\nSMEAR         24.6863     61.526      0.401      0.688     -95.903     145.275\nINFIL        -24.9745     65.281     -0.383      0.702    -152.923     102.974\nLI             4.3605      2.658      1.641      0.101      -0.849       9.570\nBLAST         -0.0115      2.266     -0.005      0.996      -4.453       4.430\nTEMP        -100.1734     77.753     -1.288      0.198    -252.567      52.220\n==============================================================================\n\nPossibly complete quasi-separation: A fraction 0.11 of observations can be\nperfectly predicted. This might indicate that there is complete\nquasi-separation. In this case some parameters will not be identified.\n```\n:::\n:::\n\n\n# 문제 2.해당 모델은 통계적으로 유의한가요? 그 이유를 검정통계량를 사용해서 설명하시오.\n\n::: {#94503ee0 .cell execution_count=2}\n``` {.python .cell-code}\n# 유의성은 회귀모델의 p-value 및 로그가능도 검정 (likelihood ratio test)로 판단\np_value = result.llr_pvalue\nprint(f\"모델의 유의성 p-value: {p_value}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n모델의 유의성 p-value: 0.04670138920512951\n```\n:::\n:::\n\n\n# 문제 3. 유의수준이 0.2를 기준으로 통계적으로 유의한 변수는 몇개이며, 어느 변수 인가요?\n\n::: {#f143397d .cell execution_count=3}\n``` {.python .cell-code}\n# 각 변수의 p-value 확인\nsignificant_vars = result.pvalues[result.pvalues < 0.2]\nprint(f\"통계적으로 유의한 변수들: \\n{significant_vars}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n통계적으로 유의한 변수들: \nLI      0.100899\nTEMP    0.197623\ndtype: float64\n```\n:::\n:::\n\n\n# 문제 4. 다음 환자에 대한 오즈는 얼마인가요?\nCELL (골수의 세포성): 65%\n\nSMEAR (골수편의 백혈구 비율): 45%\n\nINFIL (골수의 백혈병 세포 침투 비율): 55%\n\nLI (골수 백혈병 세포의 라벨링 인덱스): 1.2\n\nBLAST (말초혈액의 백혈병 세포 수): 1.1세포/μL\n\nTEMP (치료 시작 전 최고 체온): 0.9\n\n::: {#268e8b48 .cell execution_count=4}\n``` {.python .cell-code}\nnew_patient = {\n    'const': 1,\n    'CELL': 0.65,\n    'SMEAR': 0.45,\n    'INFIL': 0.55,\n    'LI': 1.2,\n    'BLAST': 1.1,\n    'TEMP': 0.9\n}\n\n# 오즈 계산\nodds = np.exp(result.predict(pd.DataFrame([new_patient])))\nprint(f\"해당 환자의 오즈: {odds[0]}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n해당 환자의 오즈: 1.037451286114182\n```\n:::\n:::\n\n\n# 문제 5. 위 환자의 혈액에서 백혈병 세포가 관측되지 않은 확률은 얼마인가요?\n\n::: {#4f71be1d .cell execution_count=5}\n``` {.python .cell-code}\nprob = odds / (1 + odds)\nprint(f\"해당 환자의 백혈병 세포 관측되지 않을 확률: {prob[0]}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n해당 환자의 백혈병 세포 관측되지 않을 확률: 0.5091907193976669\n```\n:::\n:::\n\n\n# 문제 6. TEMP 변수의 계수는 얼마이며, 해당 계수를 사용해서 TEMP 변수가 백혈병 치료에 대한 영향을 설명하시오.\n\n::: {#48932c74 .cell execution_count=6}\n``` {.python .cell-code}\ntemp_coeff = result.params['TEMP']\nprint(f\"TEMP 변수의 계수: {temp_coeff}\")\nprint(f\"TEMP 변수는 백혈병 세포 관측에 {temp_coeff}만큼 영향을 미침.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTEMP 변수의 계수: -100.17340003287605\nTEMP 변수는 백혈병 세포 관측에 -100.17340003287605만큼 영향을 미침.\n```\n:::\n:::\n\n\n# 문제 7. CELL 변수의 99% 오즈비에 대한 신뢰구간을 구하시오.\n\n# 문제 8. 주어진 데이터에 대하여 로지스틱 회귀 모델의 예측 확률을 구한 후, 50% 이상인 경우 1로 처리하여, 혼동 행렬를 구하시오.\n\n::: {#cef9f445 .cell execution_count=7}\n``` {.python .cell-code}\npred_prob = result.predict(X)\ny_pred = (pred_prob >= 0.5).astype(int)\n\n# 혼동 행렬\ncm = confusion_matrix(y, y_pred)\nprint(f\"혼동 행렬:\\n{cm}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n혼동 행렬:\n[[15  3]\n [ 4  5]]\n```\n:::\n:::\n\n\n# 문제 9. 해당 모델의 Accuracy는 얼마인가요?\n\n::: {#93bcf6d8 .cell execution_count=8}\n``` {.python .cell-code}\naccuracy = accuracy_score(y, y_pred)\nprint(f\"모델의 Accuracy: {accuracy}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n모델의 Accuracy: 0.7407407407407407\n```\n:::\n:::\n\n\n# 문제 10. 해당 모델의 F1 Score를 구하세요.\n\n::: {#ce18baea .cell execution_count=9}\n``` {.python .cell-code}\nf1 = f1_score(y, y_pred)\nprint(f\"모델의 F1 Score: {f1}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n모델의 F1 Score: 0.5882352941176471\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}